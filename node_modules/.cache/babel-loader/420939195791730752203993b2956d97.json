{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen\\\\Desktop\\\\REACT\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  // componentDidMount() {\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  //   // const { updateCollections } = this.props;\n  //   // const collectionRef = firestore.collection(\"collections\");\n  //   //using firbase methods\n  //   // this.unsubscribeFromSnapShot = collectionRef.onSnapshot(\n  //   //   async (snapshot) => {\n  //   //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   //     updateCollections(collectionsMap);\n  //   //     this.setState({ loading: false });\n  //   //   }\n  //   // );\n  //   //using promises\n  //   //what get does is get back the data associated with the collectionRef(which is exactly the same as snapshot object we got).\n  //   // collectionRef.get().then((snapshot) => {\n  //   //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   //   updateCollections(collectionsMap);\n  //   //   this.setState({ loading: false });\n  //   // });\n  //   // //using fetch\n  //   // //https://firestore.googleapis.com/v1/projects/crown-db-169a7/databases/(default)/documents/\n  //   // fetch(\n  //   //   \"https://firestore.googleapis.com/v1/projects/crown-db-169a7/databases/(default)/documents/collections\"\n  //   // )\n  //   //   .then((response) => response.json())\n  //   //   .then((collections) => console.log(collections));\n  // }\n  useEffect(() => {\n    fetchCollectionsStart();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`\n    /*component={CollectionsOverview}*/\n    // render={(props) => (\n    //   <CollectionsOverviewWithSpinner\n    //     isLoading={isCollectionFetching}\n    //     {...props}\n    //   />\n    // )}\n    ,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`\n    /* component={CollectionPage}*/\n    // render={(props) => (\n    //   <CollectionPageWithSpinner\n    //     isLoading={!isCollectionLoaded}\n    //     {...props}\n    //   />\n    // )}\n    ,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Praveen/Desktop/REACT/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,qBAAF;AAAyBE,EAAAA;AAAzB,CAAD,KAAsC;AACrD;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK;AACpB;AAEA;AACA;AACA;AACA;AACA;AACA;AAVF;AAWE,IAAA,SAAS,EAAEL,4BAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAeE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AARF;AASE,IAAA,SAAS,EAAEJ,uBATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AA6BD,CAnED;;AAqEA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\nimport CollectionPageContainer from \"../collection/collection.container\";\r\n\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n  // componentDidMount() {\r\n  //   const { fetchCollectionsStart } = this.props;\r\n  //   fetchCollectionsStart();\r\n\r\n  //   // const { updateCollections } = this.props;\r\n  //   // const collectionRef = firestore.collection(\"collections\");\r\n\r\n  //   //using firbase methods\r\n  //   // this.unsubscribeFromSnapShot = collectionRef.onSnapshot(\r\n  //   //   async (snapshot) => {\r\n  //   //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //   //     updateCollections(collectionsMap);\r\n  //   //     this.setState({ loading: false });\r\n  //   //   }\r\n  //   // );\r\n\r\n  //   //using promises\r\n  //   //what get does is get back the data associated with the collectionRef(which is exactly the same as snapshot object we got).\r\n  //   // collectionRef.get().then((snapshot) => {\r\n  //   //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //   //   updateCollections(collectionsMap);\r\n  //   //   this.setState({ loading: false });\r\n  //   // });\r\n\r\n  //   // //using fetch\r\n  //   // //https://firestore.googleapis.com/v1/projects/crown-db-169a7/databases/(default)/documents/\r\n  //   // fetch(\r\n  //   //   \"https://firestore.googleapis.com/v1/projects/crown-db-169a7/databases/(default)/documents/collections\"\r\n  //   // )\r\n  //   //   .then((response) => response.json())\r\n  //   //   .then((collections) => console.log(collections));\r\n  // }\r\n\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  });\r\n\r\n  return (\r\n    <div className=\"shop-page\">\r\n      {/* render value in the route takes a function where the parameters in the function are the parameters that the function will receive */}\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        /*component={CollectionsOverview}*/\r\n\r\n        // render={(props) => (\r\n        //   <CollectionsOverviewWithSpinner\r\n        //     isLoading={isCollectionFetching}\r\n        //     {...props}\r\n        //   />\r\n        // )}\r\n        component={CollectionsOverviewContainer}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        /* component={CollectionPage}*/\r\n        // render={(props) => (\r\n        //   <CollectionPageWithSpinner\r\n        //     isLoading={!isCollectionLoaded}\r\n        //     {...props}\r\n        //   />\r\n        // )}\r\n        component={CollectionPageContainer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}